Author: Lu YaNing <luyaning@uniontech.com>
Date:   Fri July 2 13:08:00 2021 +0800
Subject: fix QLineEdit cursor jumping on touch screen
---

Index: qtbase-opensource-src/src/widgets/widgets/qlineedit.cpp
===================================================================
--- qtbase-opensource-src.orig/src/widgets/widgets/qlineedit.cpp
+++ qtbase-opensource-src/src/widgets/widgets/qlineedit.cpp
@@ -1477,6 +1477,8 @@ bool QLineEdit::event(QEvent * e)
         }
         else if (timerId == d->tripleClickTimer.timerId())
             d->tripleClickTimer.stop();
+        else if (timerId == d->popupClickTimer.timerId())
+            d->popupClickTimer.stop();
     } else if (e->type() == QEvent::ContextMenu) {
 #ifndef QT_NO_IM
         if (d->control->composeMode())
@@ -1539,8 +1541,6 @@ void QLineEdit::mousePressEvent(QMouseEv
 
     if (e->source() == Qt::MouseEventSynthesizedByQt) {
         d->touchPress = true;
-        if (d->touchPopup)
-            d->touchPopup = false;
         d->oldPosX = e->screenPos().x();
     }
     d->mousePressPos = e->pos();
@@ -1576,9 +1576,11 @@ void QLineEdit::mousePressEvent(QMouseEv
 #endif
     {
         if (d->touchPress) {
-            d->CurrentCursor = cursor;
-            d->modStateMark = mark;
-            QTimer::singleShot(QApplication::doubleClickInterval(), this, SLOT(_q_waitTouchPopup()));
+            if(selectionLength() == 0) {
+                d->control->moveCursor(cursor, mark);
+            }else {
+                d->popupClickTimer.start(QApplication::doubleClickInterval(), this);
+            }
         } else {
             d->control->moveCursor(cursor, mark);
         }
@@ -1633,7 +1635,7 @@ void QLineEdit::mouseMoveEvent(QMouseEve
                     return;
 
                 // 1.0: Touch jitter causes the range of coordinates to change
-                if ((d->touchPress && !d->touchPopup) && (qAbs(e->screenPos().x() - d->oldPosX) < 1.0)) {
+                if (d->touchPress && (qAbs(e->screenPos().x() - d->oldPosX) < 1.0)) {
                     d->oldPosX = e->screenPos().x();
                     return;
                 }
@@ -1659,11 +1661,13 @@ void QLineEdit::mouseReleaseEvent(QMouse
     Q_D(QLineEdit);
     if (e->source() == Qt::MouseEventSynthesizedByQt && d->touchPress) {
         d->touchPress = false;
-        d->touchPopup = true;
         if (d->doublePress) {
-            d->touchPopup = false;
             d->doublePress = false;
         }
+        //Press is triggered when the status is selected. Short press is normally triggered if the status is not long pressed
+        if (d->popupClickTimer.isActive()) {
+            d->control->moveCursor(d->xToPos(e->pos().x()));
+        }
     }
 
     if (d->sendMouseEventToInputContext(e))
@@ -2227,7 +2231,6 @@ void QLineEdit::contextMenuEvent(QContex
 {
     Q_D(QLineEdit);
     d->touchPress = false;
-    d->touchPopup = false;
     d->doublePress = false;
 
 
Index: qtbase-opensource-src/src/widgets/widgets/qlineedit_p.cpp
===================================================================
--- qtbase-opensource-src.orig/src/widgets/widgets/qlineedit_p.cpp
+++ qtbase-opensource-src/src/widgets/widgets/qlineedit_p.cpp
@@ -146,13 +146,8 @@ void QLineEditPrivate::_q_cursorPosition
 
 void QLineEditPrivate::_q_waitTouchPopup()
 {
-    if (touchPopup) {
-        control->moveCursor(CurrentCursor, modStateMark);
-        touchPopup = false;
-    }
 }
 
-
 #ifdef QT_KEYPAD_NAVIGATION
 void QLineEditPrivate::_q_editFocusChange(bool e)
 {
@@ -251,11 +246,8 @@ void QLineEditPrivate::init(const QStrin
     q->setAttribute(Qt::WA_MacShowFocusRect);
 
     touchPress = false;
-    touchPopup = false;
     doublePress = false;
     oldPosX = 0;
-    CurrentCursor = 0;
-    modStateMark = false;
     initMouseYThreshold();
 }
 
Index: qtbase-opensource-src/src/widgets/widgets/qlineedit_p.h
===================================================================
--- qtbase-opensource-src.orig/src/widgets/widgets/qlineedit_p.h
+++ qtbase-opensource-src/src/widgets/widgets/qlineedit_p.h
@@ -201,6 +201,7 @@ public:
 
     QPoint tripleClick;
     QBasicTimer tripleClickTimer;
+    QBasicTimer popupClickTimer;
     uint frame : 1;
     uint contextMenuEnabled : 1;
     uint cursorVisible : 1;
@@ -209,11 +210,8 @@ public:
     uint edited : 1;
     int hscroll;
 
-    int CurrentCursor;
     bool touchPress;
-    bool touchPopup;
     bool doublePress;
-    bool modStateMark;
     qreal oldPosX ;
 
     int vscroll;
