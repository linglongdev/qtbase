Author: Zhang Hao <zhanghao@uniontech.com>
Date:   Tue Aug 24 09:01:10 2021 +0800
Subject: fix QLineEdit account for the placeholderText when computing lineRect
Upstream: https://codereview.qt-project.org/c/qt/qtbase/+/361651

---

Index: qtbase-opensource-src/src/widgets/widgets/qlineedit.cpp
===================================================================
--- qtbase-opensource-src.orig/src/widgets/widgets/qlineedit.cpp
+++ qtbase-opensource-src/src/widgets/widgets/qlineedit.cpp
@@ -2030,21 +2030,28 @@ void QLineEdit::paintEvent(QPaintEvent *
     p.setClipRect(r);
 
     QFontMetrics fm = fontMetrics();
+    int fmHeight = 0;
+    if (d->shouldShowPlaceholderText())
+        fmHeight = fm.boundingRect(d->placeholderText).height();
+    else
+        fmHeight = fm.boundingRect(d->control->text() + d->control->preeditAreaText()).height();
+    fmHeight = qMax(fmHeight, fm.height());
+
     Qt::Alignment va = QStyle::visualAlignment(d->control->layoutDirection(), QFlag(d->alignment));
     switch (va & Qt::AlignVertical_Mask) {
      case Qt::AlignBottom:
-         d->vscroll = r.y() + r.height() - fm.height() - QLineEditPrivate::verticalMargin;
+         d->vscroll = r.y() + r.height() - fmHeight - QLineEditPrivate::verticalMargin;
          break;
      case Qt::AlignTop:
          d->vscroll = r.y() + QLineEditPrivate::verticalMargin;
          break;
      default:
          //center
-         d->vscroll = r.y() + (r.height() - fm.height() + 1) / 2;
+         d->vscroll = r.y() + (r.height() - fmHeight + 1) / 2;
          break;
     }
     QRect lineRect(r.x() + QLineEditPrivate::horizontalMargin, d->vscroll,
-                   r.width() - 2 * QLineEditPrivate::horizontalMargin, fm.height());
+                   r.width() - 2 * QLineEditPrivate::horizontalMargin, fmHeight);
 
     if (d->shouldShowPlaceholderText()) {
         if (!d->placeholderText.isEmpty()) {
