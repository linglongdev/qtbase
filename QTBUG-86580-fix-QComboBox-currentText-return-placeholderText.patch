Index: qtbase-opensource-src/src/widgets/widgets/qcombobox.cpp
===================================================================
--- qtbase-opensource-src.orig/src/widgets/widgets/qcombobox.cpp
+++ qtbase-opensource-src/src/widgets/widgets/qcombobox.cpp
@@ -2346,10 +2346,9 @@ QString QComboBox::currentText() const
     Q_D(const QComboBox);
     if (d->lineEdit)
         return d->lineEdit->text();
-    else if (d->currentIndex.isValid())
+    if (d->currentIndex.isValid())
         return d->itemText(d->currentIndex);
-    else
-        return d->placeholderText;
+    return {};
 }
 
 /*!
Index: qtbase-opensource-src/tests/auto/widgets/widgets/qcombobox/tst_qcombobox.cpp
===================================================================
--- qtbase-opensource-src.orig/tests/auto/widgets/widgets/qcombobox/tst_qcombobox.cpp
+++ qtbase-opensource-src/tests/auto/widgets/widgets/qcombobox/tst_qcombobox.cpp
@@ -419,7 +419,7 @@ void tst_QComboBox::getSetCheck()
     obj1.clear();
     obj1.setPlaceholderText(placeholderText);
     obj1.addItems({"1", "2", "3", "4", "5"});
-    QCOMPARE(obj1.currentText(), placeholderText);
+    QCOMPARE(obj1.currentText(), QString());
     QCOMPARE(obj1.currentIndex(), -1);
     obj1.setPlaceholderText(QString()); // should not change anything
     QCOMPARE(obj1.currentText(), "1");
